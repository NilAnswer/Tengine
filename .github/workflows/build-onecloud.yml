name: Build Onecloud

on:
  push:
    branches: [tengine-lite]
    paths-ignore: 
    - 'doc/**'
    - 'README.md'
    - 'README_EN.md'
  pull_request:
    branches: [tengine-lite]
    paths-ignore: 
    - 'doc/**'
    - 'README.md'
    - 'README_EN.md'

jobs:
  linux-armv7-cpu-gcc:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: cache-qemu
      id: cache-qemu
      uses: actions/cache@v3
      with:
        path: qemu-install
        key: qemu-arm-install-1
    - name: checkout-qemu
      if: steps.cache-qemu.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: qemu/qemu
        path: qemu
        ref: 8746309137ba470d1b2e8f5ce86ac228625db940
    - name: qemu
      if: steps.cache-qemu.outputs.cache-hit != 'true'
      run: |
        cd qemu
        ./configure --prefix=install --target-list=arm-linux-user --disable-system
        make -j2
        make install
        cp -r arm-linux-user/install $GITHUB_WORKSPACE/qemu-install
    - name: arm-gnu-toolchain
      run: |
        sudo apt-get update
        sudo apt-get install g++-arm-linux-gnueabihf
        sudo apt-get install libprotobuf-dev protobuf-compiler
    - name: configure
      run: mkdir build && cd build && cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/arm-linux-gnueabihf.toolchain.cmake -DTENGINE_BUILD_TESTS=OFF -DTENGINE_BUILD_CONVERT_TOOL=ON ..
    - name: build
      run: cmake --build build -j 2
    - name: Zip directory
      run: |
        cd /home/runner/work/Tengine/
        zip -r armv7.zip Tengine
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: armv7
        path: /home/runner/work/Tengine/armv7.zip
