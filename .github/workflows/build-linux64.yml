name: Build Linux x86_64
on:
  push:
    branches: [tengine-lite]
    paths-ignore: 
    - 'doc/**'
    - 'README.md'
    - 'README_EN.md'
  pull_request:
    branches: [tengine-lite]
    paths-ignore: 
    - 'doc/**'
    - 'README.md'
    - 'README_EN.md'

jobs:
  linux-x64-cpu-gcc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: update
      run: sudo apt-get update
    - name: depends
      run: sudo apt-get install libprotobuf-dev protobuf-compiler libopencv-dev
    - name: configure
      run: mkdir build && cd build && cmake ..
    - name: build
      run: cmake --build build -j 2
    - name: Zip directory
      run: |
        cd /home/runner/work/Tengine/
        zip -r linux64gcc.zip Tengine
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux64gcc
        path: /home/runner/work/Tengine/linux64gcc.zip

  linux-x64-cpu-clang:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: update
      run: sudo apt-get update
    - name: depends
      run: sudo apt-get install libprotobuf-dev protobuf-compiler libopencv-dev
    - name: configure
      env:
        CC: clang
        CXX: clang++    
      run: mkdir build && cd build && cmake -DTENGINE_BUILD_TESTS=ON -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_C_FLAGS=-fPIC -DCMAKE_CXX_FLAGS=-fPIC  ..
    - name: build
      run: cmake -DCMAKE_C_FLAGS=-fPIC -DCMAKE_CXX_FLAGS=-fPIC --build build -j 2
    - name: Zip directory
      run: |
        cd /home/runner/work/Tengine/
        zip -r linux64clang.zip Tengine
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux64clang
        path: /home/runner/work/Tengine/linux64clang.zip
        
